# setup.cfg for additional configuration
[metadata]
name = sirf-simind-connection
description = A Python wrapper for seamless integration between SIRF and SIMIND Monte Carlo simulator
long_description = file: README.md
long_description_content_type = text/markdown
author = Sam Porter, Rebecca Gillen, Efstathios Varzakis
license = Apache-2.0
url = https://github.com/samdporter/SIRF-SIMIND-Connection
project_urls =
    Bug Tracker = https://github.com/samdporter/SIRF-SIMIND-Connection/issues
    Documentation = https://sirf-simind-connection.readthedocs.io/
    Source = https://github.com/samdporter/SIRF-SIMIND-Connection
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Science/Research
    License :: OSI Approved :: Apache Software License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Topic :: Scientific/Engineering :: Medical Science Apps.
    Topic :: Scientific/Engineering :: Physics

[options]
packages = find:
python_requires = >=3.8
install_requires =
    numpy>=1.20.0
    PyYAML>=5.4.0
    pydicom>=2.0.0
    scipy>=1.7.0
    matplotlib>=3.3.0

[options.extras_require]
dev = 
    pytest>=6.0
    pytest-cov>=2.10.0
    pytest-mock>=3.6.0
    black>=21.0.0
    flake8>=3.8.0
    mypy>=0.910
    sphinx>=4.0.0
    sphinx-rtd-theme>=0.5.0

[options.packages.find]
exclude =
    tests*
    docs*
    examples*

[flake8]
max-line-length = 88
extend-ignore = E203, W503
exclude = 
    .git,
    __pycache__,
    build,
    dist,
    *.egg-info,
    .venv,
    .pytest_cache

[mypy]
python_version = 3.8
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True
strict_equality = True

[coverage:run]
source = sirf_simind_connection
omit = 
    */tests/*
    */test_*
    setup.py
    
[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod